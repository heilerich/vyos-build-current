name: VyOS Current

on:
  schedule:
    - cron: 2 6 * * *
  push:
    branches:
      - development

env:
  GIT_CLONE_URL: https://github.com/vyos/vyos-build
  BRANCH: current
  ARCHITECTURE: amd64
  BUILD_BY: code@fehe.eu
  BUILD_TYPE: release
  VERSION: 1.4-rolling
  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/

jobs:
  getrev:
    runs-on: ubuntu-latest
    outputs:
      rtag: ${{ steps.parse.outputs.rtag }}
    steps:
      - name: Clone source code
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL

      - name: Parse rev
        id: parse
        working-directory: ./vyos-build
        run: echo "::set-output name=rtag::v${{ env.VERSION }}+$(git rev-parse --short HEAD)"

  build-iso:
    runs-on: ubuntu-latest
    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged
    
    steps:
      - name: Clone source code
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL
        
      - name: Build ISO
        working-directory: ./vyos-build
        continue-on-error: true
        run: |
          ./configure --architecture $ARCHITECTURE --build-by $BUILD_BY --build-type $BUILD_TYPE --version $VERSION-$(git rev-parse --short HEAD)
          sudo make iso
          mv build/vyos-$VERSION-*.iso build/vyos-$ARCHITECTURE.iso
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: vyos-${{ env.ARCHITECTURE }}-iso
          path: vyos-build/build/vyos-*.iso

  build-ova:
    runs-on: ubuntu-latest
    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged
    
    steps:
      - uses: actions/checkout@v2

      - name: Decrypt dependencies
        run: |
          gpg --decrypt --passphrase ${{ secrets.ENC_KEY }} --batch $GITHUB_WORKSPACE/ovf-4.4.1.bundle.gpg > /vyos/ovf.bundle
          gpg --decrypt --passphrase ${{ secrets.ENC_KEY }} --batch $GITHUB_WORKSPACE/sign.pem.gpg > /vyos/sign.pem

      - name: Install dependencies
        run: sh /vyos/ovf.bundle --eulas-agreed

      - name: Clone source code
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL
        
      - name: Build OVA
        working-directory: ./vyos-build
        run: |
          mkdir key && cp /vyos/sign.pem key/privatekey.pem
          ./configure --architecture $ARCHITECTURE --build-by $BUILD_BY --build-type $BUILD_TYPE --version $VERSION-$(git rev-parse --short HEAD)
          sudo make vmware
          mv build/vyos_vmware_image-signed.ova build/vyos-$ARCHITECTURE.ova

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: vyos-${{ env.ARCHITECTURE }}-ova
          path: vyos-build/build/vyos-*.ova

  release:
    runs-on: ubuntu-latest
    needs:
      - getrev
      - build-ova
      - build-iso
    
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Download ova artifact
        uses: actions/download-artifact@v2
        with:
          name: vyos-${{ env.ARCHITECTURE }}-ova
          path: vyos-${{ env.ARCHITECTURE }}

      - name: Download iso artifact
        uses: actions/download-artifact@v2
        with:
          name: vyos-${{ env.ARCHITECTURE }}-iso
          path: vyos-${{ env.ARCHITECTURE }}

      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          omitBody: true
          tag: ${{ needs.getrev.outputs.rtag }}
          allowUpdates: true

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${{ needs.getrev.outputs.rtag }}
          find ./vyos-${{ env.ARCHITECTURE }}/ -name "vyos-*" \
             -type f -exec hub release edit -a "{}" -m "" "${TAG_NAME}" \;
